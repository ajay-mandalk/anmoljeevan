---
export interface Props {
    href: string,
    text: string,
    className?: string,
    variant: "primary" | "secondary"
}

const { href, text, className, variant } = Astro.props

// Simplified theme styles with consistent color scheme
const getThemeStyle = (variant: "primary" | "secondary") => {
    const styles = {
        primary: "bg-[#00ff00] border-transparent relative after:bg-[#00ff00] hover:border-[#17ee17]",
        secondary: "bg-transparent border-[#d2e825] hover:bg-[#d2e825]/10"
    }
    return styles[variant]
}

// Simplified text colors
const getTextColor = (variant: "primary" | "secondary") => {
    return variant === "primary" ? "text-gray-800" : "text-[#d2e825]"
}
---

<a href={href} 
    class={`inline-flex items-center px-6 py-3 rounded-lg outline-none relative overflow-hidden border duration-300 ease-linear
    after:absolute after:inset-x-0 after:aspect-square after:scale-0 after:opacity-70 after:origin-center 
    after:duration-300 after:ease-linear after:rounded-full after:top-0 after:left-0
    ${getThemeStyle(variant)} hover:after:opacity-100 hover:after:scale-[2.5] ${className}`}>
    <span class={`relative ${getTextColor(variant)} z-10 font-medium`}>
        {text}
    </span>
</a>